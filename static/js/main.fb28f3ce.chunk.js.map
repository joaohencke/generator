{"version":3,"sources":["components/CardHeader.jsx","components/CardFooter.jsx","components/Card.jsx","components/CardBody.jsx","generators/components/Generator.jsx","generators/services/generatorService.js","generators/container/GeneratorContainer.jsx","_app/App.jsx","serviceWorker.js","index.js"],"names":["CardHeader","props","className","attributes","cssModule","Object","objectWithoutProperties","classes","classNames","react_default","a","createElement","assign","CardFooter","Card","color","body","inverse","outline","innerRef","concat","ref","Body","Header","Footer","Generator","context","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","generate","validate","state","value","options","generator","setState","str","el","document","setAttribute","style","position","left","appendChild","selected","getSelection","rangeCount","getRangeAt","select","execCommand","removeChild","removeAllRanges","addRange","toastr","error","event","target","name","console","log","_this2","components_Card","title","type","placeholder","onChange","disabled","onClick","copy","id","map","val","key","mask","objectSpread","Component","generators","cpf","cnpj","creditCard","keys","schemas","GeneratorContainer","handle","e","components_Generator","App","container_GeneratorContainer","Boolean","window","location","hostname","match","ReactDOM","render","_app_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fb28f3ce.chunk.js","sourcesContent":["import classNames from 'classnames'\nimport React from 'react';\n\nconst CardHeader = props => {\n  const {\n    className,\n    cssModule,\n    ...attributes\n  } = props;\n  const classes = classNames(\n    className,\n    'card-header'\n  );\n\n\n  return (\n    <div {...attributes} className={classes} ></div>\n  );\n}\n\nexport default CardHeader;","import classNames from 'classnames'\nimport React from 'react';\n\nconst CardFooter = props => {\n  const {\n    className,\n    cssModule,\n    ...attributes\n  } = props;\n  const classes = classNames(\n    className,\n    'card-footer'\n  );\n\n\n  return (\n    <div {...attributes} className={classes} ></div>\n  );\n}\n\nexport default CardFooter;","import classNames from 'classnames'\nimport React from 'react';\n\nimport CardBody from './CardBody';\nimport CardHeader from './CardHeader';\nimport CardFooter from './CardFooter';\n\nconst Card = props => {\n  const {\n    className,\n    cssModule,\n    color,\n    body,\n    inverse,\n    outline,\n    innerRef,\n    ...attributes\n  } = props;\n  const classes = classNames(\n    className,\n    'card',\n    inverse ? 'text-white' : false,\n    body ? 'card-body' : false,\n    color ? `${outline ? 'border' : 'bg'}-${color}` : false\n  );\n\n  return (\n    <div {...attributes} className={classes} ref={innerRef} />\n  );\n}\n\nCard.Body = CardBody;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\n\nexport default Card;","import classNames from 'classnames'\nimport React from 'react';\n\nconst CardBody = props => {\n  const {\n    className,\n    cssModule,\n    ...attributes\n  } = props;\n  const classes = classNames(\n    className,\n    'card-body'\n  );\n\n\n  return (\n    <div {...attributes} className={classes} ></div>\n  );\n}\n\nexport default CardBody;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Card from '../../components/Card';\nimport toastr from 'toastr';\n\nclass Generator extends Component {\n  static propTypes = {\n    generator: PropTypes.object,\n  }\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.generate = this.generate.bind(this);\n    this.validate = this.validate.bind(this);\n\n    this.state = {\n      value: '',\n      options: this.props.options && this.props.options[0],\n    };\n\n  }\n  generate() {\n    const state = this.state;\n    state.value = this.props.generator.generate(this.state.options);\n    this.setState(state);\n  }\n  copy(str) {\n    const el = document.createElement('textarea');\n    el.value = str;\n    el.setAttribute('readonly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    const selected =\n      document.getSelection().rangeCount > 0\n        ? document.getSelection().getRangeAt(0)\n        : false;\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n    if (selected) {\n      document.getSelection().removeAllRanges();\n      document.getSelection().addRange(selected);\n    }\n  }\n  validate() {\n    toastr.error('NÃ£o implementado');\n  }\n  handleChange(event) {\n    const state = this.state;\n\n    state[event.target.name] = event.target.value;\n    console.log(event.target.value)\n    this.setState(state);\n  }\n  render() {\n    return (\n      <form className=\"form\">\n\n        <Card className=\"text-center\">\n          <Card.Header>\n            <h5 className=\"card-title\">\n              {this.props.generator.title}\n            </h5></Card.Header>\n          <Card.Body>\n            <div className=\"form-group\">\n              <div className=\"input-group\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"Gerar/Validar\" value={this.state.value} name=\"value\" onChange={this.handleChange} />\n                <div className=\"input-group-append\">\n                  <button className=\"btn-sm btn-info\" type=\"button\" disabled={!this.state.value} onClick={() => this.copy(this.state.value)}>\n                    <i className=\"fa fa-copy\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n            {this.props.options && <div className=\"form-group\">\n              <select name=\"options\" id=\"options\" className=\"form-control\" onChange={this.handleChange}>\n                {this.props.options.map(val => <option key={val} value={val}>{val}</option>)}\n              </select>\n            </div>}\n            {this.props.generator.mask && <div className=\"form-check\">\n              <label className=\"form-check-label\">\n                <input type=\"checkbox\" className=\"form-check-input\" onChange={() => this.setState({ ...this.state, options: !this.state.options })} id=\"options\" name=\"options\" />\n                MÃ¡scara</label>\n            </div>}\n          </Card.Body>\n          <Card.Footer>\n            {this.props.generator.generate && <button type=\"button\" className=\"btn btn-md btn-primary\" onClick={this.generate}>Gerar</button>}\n            {this.props.generator.validate && <button type=\"button\" className=\"btn btn-md btn-secondary\" onClick={this.validate}>Validar</button>}\n          </Card.Footer>\n        </Card>\n      </form >\n    )\n  }\n}\n\nexport default Generator;","import { generator } from '@joao.hencke/utils';\n\nconst generators = [\n  {\n    title: 'Gerador de CPF',\n    generate: generator.cpf,\n    mask: true,\n  },\n  {\n    title: 'Gerador de CNPJ',\n    generate: generator.cnpj,\n    mask: true,\n  },\n  {\n    title: 'Gerador de CartÃ£o de CrÃ©dito',\n    generate: generator.creditCard,\n    options() {\n      return Object.keys(generator.creditCard.schemas);\n    },\n  }\n];\n\nexport default generators;","import React, { Component } from 'react';\n\nimport Generator from '../components/Generator';\n\nimport generators from '../services/generatorService';\n\nclass GeneratorContainer extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      generators\n    };\n\n    this.handle = this.handle.bind(this);\n  }\n  handle() {\n\n  }\n  render() {\n    return (\n      <div className=\"row\">\n        {this.state.generators.map(e => <div className=\"col\" key={e.title}><Generator generator={e} options={e.options && e.options()}></Generator></div>)}\n      </div>\n    );\n\n  }\n}\n\nexport default GeneratorContainer;","import 'bootstrap/dist/css/bootstrap.min.css';\nimport $ from 'jquery';\nimport Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React, { Component } from 'react';\nimport GeneratorContainer from '../generators/container/GeneratorContainer'\nimport 'toastr/build/toastr.min.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <GeneratorContainer></GeneratorContainer>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './_app/App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}